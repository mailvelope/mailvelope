@import "../../../res/styles/_required";

// TODO Utilize bootstrap classes instead of custom styling
// eg. use @extend to extend bootstrap classes
// or use the component's `classNames` to point on bootstrap classes directly
// see https://getbootstrap.com/docs/4.6/components/forms/

.recipients-input {
  .react-tags-wrapper {
    position: relative;
    padding: 6px 0 0 6px;
    border: $border-width solid $input-border-color;
    border-radius: $input-border-radius;

    /* shared font styles */
    font-size: 1em;
    line-height: 1.2;

    /* clicking anywhere will focus the input */
    cursor: text;

    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  }

  .react-tags-wrapper.is-focused {
    background-color: $input-focus-bg;
    border-color: $input-focus-border-color;
    box-shadow: $input-focus-box-shadow;
  }

  .ReactTags__selected {
    display: inline;

    .tag-wrapper {
      display: inline-block;
      box-sizing: border-box;
      margin: 0 6px 6px 0;
      padding: 6px 8px;
      border-radius: 2px;
      font-family: $font-family-base;
      font-weight: 500;
      background-color: theme-color-level("primary", $alert-bg-level);
      border-color: theme-color-level("primary", $alert-border-level);
      transition: background-color 0.3s, border-color 0.3s;

      /* match the font styles */
      font-size: inherit;
      line-height: inherit;

      .ReactTags__remove {
        color: #AAA;
        margin-left: 8px;
      }

      :hover,
      :focus {
        border-color: #B1B1B1;
      }
    }

    .tag-wrapper::before {
      font: normal normal normal 14px/1 'MailvelopeIcons';
      line-height: 1;

      /* Better Font Rendering =========== */
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }

    @each $color, $value in $theme-colors {
      .tag-#{$color} {
        @include alert-variant(theme-color-level($color, $alert-bg-level), theme-color-level($color, $alert-border-level), theme-color($color));
      }

      .tag-#{$color} .ReactTags__remove {
        color: theme-color($color);
      }
    }

    .tag-success::before {
      content: "\e90f \00a0";
    }

    .tag-danger::before {
      content: "\e909 \00a0";
    }
  }

  .ReactTags__tagInput {
    display: inline-block;

    /* match tag layout */
    padding: 7px 2px;
    margin-bottom: 6px;

    /* prevent autoresize overflowing the container */
    max-width: 100%;

    .ReactTags__tagInputField {
      /* prevent autoresize overflowing the container */
      max-width: 100%;

      /* remove styles and layout from this element */
      margin: 0;
      padding: 0;
      border: 0;
      outline: none;

      /* match the font styles */
      font-size: inherit;
      line-height: inherit;

      ::-ms-clear {
        display: none;
      }
    }
  }

  @media screen and (min-width: 30em) {

    .ReactTags__tagInput {
      /* this will become the offsetParent for suggestions */
      position: relative;
    }

  }

  .ReactTags__suggestions {
    position: absolute;
    top: 100%;
    left: 0;
    width: 100%;
    z-index: 2;

    ul {
      margin: 4px -1px;
      padding: 0;
      list-style: none;
      background: white;
      border: 1px solid #D1D1D1;
      border-radius: 2px;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
    }

    li {
      border-bottom: 1px solid #ddd;
      padding: 6px 8px;
    }

    li mark {
      text-decoration: underline;
      background: none;
      font-weight: 600;
    }

    li:hover {
      cursor: pointer;
      background: #eee;
    }

    li.is-active {
      background: #b7cfe0;
    }

    li.is-disabled {
      opacity: 0.5;
      cursor: auto;
    }
  }

  @media screen and (min-width: 30em) {
    .ReactTags__suggestions {
      width: 240px;
    }
  }
}