@import "../../../res/styles/_required";

@import "/node_modules/bootstrap/scss/badge";
@import "/node_modules/bootstrap/scss/dropdown";
@import "/node_modules/bootstrap/scss/forms";

.recipients-input {
  @extend .form-control;
  padding: 1px;
  position: relative; // for the dropdown
  height: initial; // input should be stretchable

  &:focus-within {
    @extend .form-control:focus;
  }

  .tag-selected-list {
    /* The layout has to be stretchable because the input should take all the space left */
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;

    .tag-wrapper {
      @extend .badge;
      margin: 2px;

      .tag-remove {
        /* Reset button styles */
        padding: 0;
        border: none;
        background: none;
        font-weight: 700;
        font-size: 16px;
        margin-left: 8px;
      }

      &::before {
        font: normal normal normal 14px/1 'MailvelopeIcons';
        line-height: 1;

        /* Better Font Rendering =========== */
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
      }
    }

    @each $color, $value in $theme-colors {
      .badge-#{$color} {
        @include alert-variant(theme-color-level($color, $alert-bg-level), theme-color-level($color, $alert-border-level), theme-color($color));
      }

      .badge-#{$color} .tag-remove {
        color: theme-color($color);
      }
    }

    .badge-success::before {
      content: "\e90f \00a0";
    }

    .badge-danger::before {
      content: "\e909 \00a0";
    }
  }

  .tag-input-wrapper {
    flex: 1;

    /* match tag layout */
    padding: 7px 2px;
    margin: 2px;

    .tag-input-field {      
      width: 100%;
      min-width: 12rem;

      /* remove styles and layout from this element */
      margin: 0;
      padding: 0;
      border: 0;
      outline: none;

      /* match the font styles */
      font-size: inherit;
      line-height: inherit;

      ::-ms-clear {
        display: none;
      }
    }
  }

  .suggestions {
    @extend .dropdown-menu;
    /* `react-tags` adds menu to the DOM instead of hiding it, so we override bootstap */
    display: block;

    ul {
      /* Reset `ul`s padding */
      padding: 0;
      margin: 0
    }

    li {
      @extend .dropdown-item;
    }

    /* `react-tags` does not set the focus state on keyboard navigation */
    li.active-suggestion {
      @extend .dropdown-item:hover;
    }

    /* Text highlighted by search */
    li mark {
      padding: 0px;
      text-decoration: underline;
      background: none;
      font-weight: 600;
    }
  }
}